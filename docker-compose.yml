version: '3.1'

services:
  
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
      POSTGRES_HOST: db
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '5432:5432'
    volumes:
      - /var/lib/postgresql:/var/lib/postgresql  

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080


  redis:
    image: redis:latest
    container_name: redis_db
    ports:
      - '6379:6379'
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-ui
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
    ports:
      - 8081:8081
    depends_on:
      - redis


  airflow:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    command: bash -c "alembic upgrade head && python airflow.py"
     
    volumes:
      - './backend:/backend'
    ports:
      - '9000:9000'
    depends_on:
      - redis
      - db

  provider_a:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python provider_a.py
    volumes:
      - './backend:/backend'
    ports:
      - '8000:8000'



  provider_b:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python provider_b.py
    volumes:
      - './backend:/backend'
    ports:
      - '8001:8001'


volumes:
  redis-data: